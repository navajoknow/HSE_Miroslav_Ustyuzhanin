**Примеры запросов к БД**

Вывод списка студентов по предмету
  SELECT s.full_name 
  FROM Students s
  JOIN Grades g ON s.student_id = g.student_id
  JOIN Courses c ON g.course_id = c.course_id
  WHERE c.course_name = 'Философия';

Вставка данных о новом студенте
   INSERT INTO Students (full_name, birth_date, contact_info) 
   VALUES ('Тестов Тест Тестович', '2000-01-01', 'testov@hse.ru');

Вывод списка предметов, которые преподаёт конкретный преподаватель
  SELECT c.course_name 
  FROM Courses c
  JOIN CourseAssignments ca ON c.course_id = ca.course_id
  JOIN Teachers t ON ca.teacher_id = t.teacher_id
  WHERE t.full_name = 'Упиров Влад Николаевич';

Обновление контактной информации преподавателя
  UPDATE Teachers 
  SET contact_info = 'new_email@hse.ru' 
  WHERE teacher_id = 1;

Удаление записи о предмете
  DELETE FROM Courses 
  WHERE course_name = 'История';

Вставка новой оценки
  INSERT INTO Grades (student_id, course_id, teacher_id, grade, grade_date) 
  VALUES (1, 2, 1, 5, '2024-12-10');

Средний балл студента по всем предметам
  SELECT s.full_name, AVG(g.grade) AS avg_grade 
  FROM Students s
  JOIN Grades g ON s.student_id = g.student_id
  GROUP BY s.full_name;

Рейтинг преподавателей по средней оценке студентов
  SELECT t.full_name, AVG(g.grade) AS avg_grade 
  FROM Teachers t
  JOIN Grades g ON t.teacher_id = g.teacher_id
  GROUP BY t.full_name
  ORDER BY avg_grade DESC;

Преподаватели, которые преподавали более 3 предметов за последний год
  SELECT t.full_name, COUNT(DISTINCT ca.course_id) AS courses 
  FROM Teachers t 
  JOIN CourseAssignments ca ON t.teacher_id = ca.teacher_id 
  WHERE ca.assignment_year = EXTRACT(YEAR FROM CURRENT_DATE) 
  GROUP BY t.full_name 
  HAVING COUNT(DISTINCT ca.course_id) > 3;

Список студентов со средним баллом выше 4 по математическим предметам, но ниже 3 по гуманитарным
  SELECT s.full_name 
  FROM Students s
  JOIN Grades g ON s.student_id = g.student_id
  JOIN Courses c ON g.course_id = c.course_id
  GROUP BY s.full_name
  HAVING AVG(CASE WHEN c.course_type = 'Математический' THEN g.grade END) > 4
     AND AVG(CASE WHEN c.course_type = 'Гуманитарный' THEN g.grade END) < 3;

Определение предметов с наибольшим количеством двоек
  SELECT c.course_name, COUNT(g.grade) AS total_twos 
  FROM Grades g
  JOIN Courses c ON g.course_id = c.course_id
  WHERE g.grade = 2
  GROUP BY c.course_name
  ORDER BY total_twos DESC;

Студенты, получившие высший балл по всем экзаменам, и их преподаватели
  SELECT s.full_name AS student_name, t.full_name AS teacher_name 
  FROM Students s
  JOIN Grades g ON s.student_id = g.student_id
  JOIN Teachers t ON g.teacher_id = t.teacher_id
  WHERE g.grade = 5
  GROUP BY s.full_name, t.full_name
  HAVING COUNT(DISTINCT g.course_id) = (SELECT COUNT(course_id) FROM Courses);

Изменение среднего балла студента по годам
  SELECT s.full_name, EXTRACT(YEAR FROM g.grade_date) AS year, AVG(g.grade) AS avg_grade 
  FROM Students s
  JOIN Grades g ON s.student_id = g.student_id
  GROUP BY s.full_name, EXTRACT(YEAR FROM g.grade_date);

Определение лучших групп по успеваемости
  SELECT gr.group_name, AVG(g.grade) AS avg_grade 
  FROM Groups gr
  JOIN Enrollments e ON gr.group_id = e.group_id
  JOIN Grades g ON e.student_id = g.student_id
  GROUP BY gr.group_name
  ORDER BY avg_grade DESC;
